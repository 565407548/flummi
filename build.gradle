apply plugin: 'maven'
apply plugin: 'signing'

buildscript {
    

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

group = 'de.otto'
archivesBaseName='flummi'
version='0.20.2'


task wrapper(type: Wrapper) {
     gradleVersion = '2.0'
}

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}


test {
    systemProperties = System.properties

    description "Tell gradle to use TestNG with all groups"
    useTestNG()
    options {
        useDefaultListeners = true
    }
}

idea.project {
    jdkName = "1.8"
    languageLevel = "1.8"
    ipr.withXml { provider ->
        provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

dependencies {

    compile "com.google.code.gson:gson:2.6.2"
    compile "com.ning:async-http-client:1.9.33"

    testCompile "org.testng:testng:6.9.9"
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile "org.hamcrest:hamcrest-core:1.3"
    testCompile "org.hamcrest:hamcrest-library:1.3"

}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: project.properties["sonatypeUsername"], password: project.properties["sonatypePassword"])
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: project.properties["sonatypeUsername"], password: project.properties["sonatypePassword"])
            }

            pom.project {
                name 'togglz'
                packaging 'jar'
                description 'Status library of the edison-microservice project.'
                url 'http://github.com/otto-de/edison-microservice'

                scm {
                    url 'scm:git@github.com:otto-de/edison-microservice.git'
                    connection 'scm:git@github.com:otto-de/edison-microservice.git'
                    developerConnection 'scm:git@github.com:otto-de/edison-microservice.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'bvoigt'
                        name 'Bastian Voigt'
                    }
                }
            }
        }
    }
}
